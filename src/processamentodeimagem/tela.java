/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package processamentodeimagem;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modelo.Imagem;
import modelo.pdi;

/**
 *
 * @author DELL
 */
public class tela extends javax.swing.JFrame {

    Imagem pilhaImagem = new Imagem();
    JFileChooser chooser = new JFileChooser();
    private ImageIcon format = null;
    File f;
    BufferedImage buffered;
    pdi objImagem = new pdi();

    /**
     * Creates new form tela
     */
    public tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelImagem = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArquivo = new javax.swing.JMenu();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenuItemSalvar = new javax.swing.JMenuItem();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuEditar = new javax.swing.JMenu();
        jMenuItemDesfazer = new javax.swing.JMenuItem();
        jMenuEfeitos = new javax.swing.JMenu();
        jMenuItemNegativo = new javax.swing.JMenuItem();
        jMenuItemPretoBranco = new javax.swing.JMenuItem();
        jMenuItemRecortar = new javax.swing.JMenuItem();
        jMenuEscala = new javax.swing.JMenu();
        jMenuItemEscalaAumentar = new javax.swing.JMenuItem();
        jMenuItemEscalaDiminuir = new javax.swing.JMenuItem();
        jMenuEfeitos1 = new javax.swing.JMenu();
        jMenuItemRt90H = new javax.swing.JMenuItem();
        jMenuItemRt90AH = new javax.swing.JMenuItem();
        jMenuItemRt180 = new javax.swing.JMenuItem();
        jMenuEfeitos2 = new javax.swing.JMenu();
        jMenuItemEspalhamentoHorizontal = new javax.swing.JMenuItem();
        jMenuItemEspalhamento = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabelImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabelImagem, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenuArquivo.setText("Arquivo");

        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemAbrir);

        jMenuItemSalvar.setText("Salvar");
        jMenuItemSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalvarActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSalvar);

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSair);

        jMenuBar1.add(jMenuArquivo);

        jMenuEditar.setText("Editar");

        jMenuItemDesfazer.setText("Desfazer");
        jMenuItemDesfazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDesfazerActionPerformed(evt);
            }
        });
        jMenuEditar.add(jMenuItemDesfazer);

        jMenuBar1.add(jMenuEditar);

        jMenuEfeitos.setText("Efeitos");
        jMenuEfeitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEfeitosActionPerformed(evt);
            }
        });

        jMenuItemNegativo.setText("Negativo");
        jMenuItemNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNegativoActionPerformed(evt);
            }
        });
        jMenuEfeitos.add(jMenuItemNegativo);

        jMenuItemPretoBranco.setText("Preto e Branco");
        jMenuItemPretoBranco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPretoBrancoActionPerformed(evt);
            }
        });
        jMenuEfeitos.add(jMenuItemPretoBranco);

        jMenuItemRecortar.setText("Recortar");
        jMenuItemRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRecortarActionPerformed(evt);
            }
        });
        jMenuEfeitos.add(jMenuItemRecortar);

        jMenuEscala.setText("Escala");
        jMenuEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEscalaActionPerformed(evt);
            }
        });

        jMenuItemEscalaAumentar.setText("Aumentar");
        jMenuItemEscalaAumentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEscalaAumentarActionPerformed(evt);
            }
        });
        jMenuEscala.add(jMenuItemEscalaAumentar);

        jMenuItemEscalaDiminuir.setText("Diminuir");
        jMenuItemEscalaDiminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEscalaDiminuirActionPerformed(evt);
            }
        });
        jMenuEscala.add(jMenuItemEscalaDiminuir);

        jMenuEfeitos.add(jMenuEscala);

        jMenuEfeitos1.setText("Rotacao");
        jMenuEfeitos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEfeitos1ActionPerformed(evt);
            }
        });

        jMenuItemRt90H.setText("90 ° Horario");
        jMenuItemRt90H.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRt90HActionPerformed(evt);
            }
        });
        jMenuEfeitos1.add(jMenuItemRt90H);

        jMenuItemRt90AH.setText("90 ° AntiHorario");
        jMenuItemRt90AH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRt90AHActionPerformed(evt);
            }
        });
        jMenuEfeitos1.add(jMenuItemRt90AH);

        jMenuItemRt180.setText("180 °");
        jMenuItemRt180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRt180ActionPerformed(evt);
            }
        });
        jMenuEfeitos1.add(jMenuItemRt180);

        jMenuEfeitos.add(jMenuEfeitos1);

        jMenuEfeitos2.setText("Espelhamento");
        jMenuEfeitos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEfeitos2ActionPerformed(evt);
            }
        });

        jMenuItemEspalhamentoHorizontal.setText("Espelhamento Horizontal");
        jMenuItemEspalhamentoHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEspalhamentoHorizontalActionPerformed(evt);
            }
        });
        jMenuEfeitos2.add(jMenuItemEspalhamentoHorizontal);

        jMenuItemEspalhamento.setText("Espelhamento Vertical");
        jMenuItemEspalhamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEspalhamentoActionPerformed(evt);
            }
        });
        jMenuEfeitos2.add(jMenuItemEspalhamento);

        jMenuEfeitos.add(jMenuEfeitos2);

        jMenuBar1.add(jMenuEfeitos);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemPretoBrancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPretoBrancoActionPerformed
        buffered = objImagem.pretoBranco(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemPretoBrancoActionPerformed

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
        try {
            chooser.showOpenDialog(null);
            f = chooser.getSelectedFile();
            format = new ImageIcon(f.getAbsolutePath(), "description");
            buffered = ImageIO.read(f);
            jLabelImagem.setIcon(format);
        } catch (IOException ex) {
//            Logger.getLogger(tela.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    private void jMenuItemEspalhamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEspalhamentoActionPerformed
        buffered = objImagem.espelhamentoVertical(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemEspalhamentoActionPerformed

    private void jMenuEfeitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEfeitosActionPerformed

    }//GEN-LAST:event_jMenuEfeitosActionPerformed

    private void jMenuItemEspalhamentoHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEspalhamentoHorizontalActionPerformed
        buffered = objImagem.espelhamentoHorizontal(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemEspalhamentoHorizontalActionPerformed

    private void jMenuItemNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNegativoActionPerformed
        buffered = objImagem.negativo(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemNegativoActionPerformed

    private void jMenuItemRt90AHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRt90AHActionPerformed
        buffered = objImagem.rotacao90AntiHorario_(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemRt90AHActionPerformed

    private void jMenuEfeitos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEfeitos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEfeitos1ActionPerformed

    private void jMenuItemRt180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRt180ActionPerformed
        buffered = objImagem.rotacao180(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemRt180ActionPerformed

    private void jMenuItemRt90HActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRt90HActionPerformed
        buffered = objImagem.rotacao90Horario_(buffered);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemRt90HActionPerformed

    private void jMenuEfeitos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEfeitos2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEfeitos2ActionPerformed

    private void jMenuItemRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRecortarActionPerformed
        buffered = buffered.getSubimage(buffered.getMinX(), buffered.getMinY(), buffered.getWidth()/2, buffered.getHeight()/2);
        ImageIcon imageIcon = new ImageIcon(buffered);
        jLabelImagem.setIcon(imageIcon);
    }//GEN-LAST:event_jMenuItemRecortarActionPerformed

    private void jMenuItemDesfazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDesfazerActionPerformed
        try {
            buffered = ImageIO.read(chooser.getSelectedFile());
            jLabelImagem.setIcon(format);
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_jMenuItemDesfazerActionPerformed

    private void jMenuItemEscalaAumentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEscalaAumentarActionPerformed
        try {
            ImageIcon imageIcon = objImagem.redimensionar(buffered,buffered.getWidth()+100,buffered.getHeight()+100);
            Image image = imageIcon.getImage();
            buffered = (BufferedImage) image;
            jLabelImagem.setIcon(imageIcon);
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_jMenuItemEscalaAumentarActionPerformed

    private void jMenuItemEscalaDiminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEscalaDiminuirActionPerformed
        try {
            ImageIcon imageIcon = objImagem.redimensionar(buffered,buffered.getWidth()-100,buffered.getHeight()-100);
            Image image = imageIcon.getImage();
            buffered = (BufferedImage) image;
            jLabelImagem.setIcon(imageIcon);
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_jMenuItemEscalaDiminuirActionPerformed

    private void jMenuEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEscalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEscalaActionPerformed

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuItemSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalvarActionPerformed
        try {
            ImageIO.write(buffered, "JPG", new File("nweImg.jpg"));
            JOptionPane.showMessageDialog(null, "Salvo com Sucesso!");
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_jMenuItemSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                tela t =new tela();
                t.setLocationRelativeTo(null);
                t.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelImagem;
    private javax.swing.JMenu jMenuArquivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEditar;
    private javax.swing.JMenu jMenuEfeitos;
    private javax.swing.JMenu jMenuEfeitos1;
    private javax.swing.JMenu jMenuEfeitos2;
    private javax.swing.JMenu jMenuEscala;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JMenuItem jMenuItemDesfazer;
    private javax.swing.JMenuItem jMenuItemEscalaAumentar;
    private javax.swing.JMenuItem jMenuItemEscalaDiminuir;
    private javax.swing.JMenuItem jMenuItemEspalhamento;
    private javax.swing.JMenuItem jMenuItemEspalhamentoHorizontal;
    private javax.swing.JMenuItem jMenuItemNegativo;
    private javax.swing.JMenuItem jMenuItemPretoBranco;
    private javax.swing.JMenuItem jMenuItemRecortar;
    private javax.swing.JMenuItem jMenuItemRt180;
    private javax.swing.JMenuItem jMenuItemRt90AH;
    private javax.swing.JMenuItem jMenuItemRt90H;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemSalvar;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
